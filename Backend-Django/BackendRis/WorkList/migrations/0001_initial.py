# Generated by Django 5.0.4 on 2024-05-23 00:11

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Equipement',
            fields=[
                ('id_equipement', models.AutoField(primary_key=True, serialize=False)),
                ('nom_equipement', models.CharField(max_length=100)),
                ('fabricant', models.CharField(max_length=100)),
                ('modele', models.CharField(max_length=100)),
                ('annee_achat', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Doctors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('speciality', models.CharField(max_length=100)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='doctor_user_set', related_query_name='doctor', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='doctor_user_set', related_query_name='doctor', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ExamenRadiologique',
            fields=[
                ('id_examen', models.AutoField(primary_key=True, serialize=False)),
                ('date_heure_examen', models.DateTimeField()),
                ('resultats', models.TextField()),
                ('Doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='WorkList.doctors')),
                ('equipement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='WorkList.equipement')),
            ],
        ),
        migrations.CreateModel(
            name='ImageRadiologique',
            fields=[
                ('id_image', models.AutoField(primary_key=True, serialize=False)),
                ('chemin_acces_image', models.CharField(max_length=255)),
                ('date_heure_creation', models.DateTimeField()),
                ('examen_radiologique', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='WorkList.examenradiologique')),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('birthday', models.DateField()),
                ('address', models.TextField()),
                ('mobile_number', models.CharField(max_length=15)),
                ('insurance_name', models.CharField(max_length=100)),
                ('CIN', models.CharField(max_length=20)),
                ('social_security_number', models.CharField(max_length=20)),
                ('situation', models.CharField(max_length=100)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='WorkList.doctors')),
            ],
        ),
        migrations.AddField(
            model_name='examenradiologique',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='WorkList.patient'),
        ),
        migrations.CreateModel(
            name='RendezVous',
            fields=[
                ('id_rendez_vous', models.AutoField(primary_key=True, serialize=False)),
                ('date_heure_rendez_vous', models.DateTimeField()),
                ('type_examen', models.CharField(max_length=100)),
                ('Doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='WorkList.doctors')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='WorkList.patient')),
            ],
        ),
        migrations.CreateModel(
            name='Worklist',
            fields=[
                ('id_worklist', models.AutoField(primary_key=True, serialize=False)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('statut', models.CharField(choices=[('en_attente', 'En attente'), ('en_cours', 'En cours'), ('terminee', 'Termin√©e')], max_length=20)),
                ('priorite', models.IntegerField()),
                ('notes', models.TextField(blank=True, null=True)),
                ('id_examen', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='WorkList.examenradiologique')),
            ],
        ),
    ]
